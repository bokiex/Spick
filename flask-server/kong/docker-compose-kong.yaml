volumes:
  dbdata:
  prometheusdata:
  grafanadata:
 
networks:
  spick:
    driver: bridge
    name: spick
    external: true

services:

  #######################################
  # PostgreSQL: The database used by Kong
  #######################################
    # kong-database:
    #     image: postgres:12
    #     restart: always
    #     networks:
    #     - spick
    #     environment:
    #         POSTGRES_DB: kong
    #         POSTGRES_USER: kong
    #         POSTGRES_PASSWORD: password
    #     ports:
    #     - "5432:5432"
    #     healthcheck:
    #         test: ["CMD", "pg_isready", "-U", "kong"]
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5
    #     volumes:
    #     - dbdata:/var/lib/postgresql/data


  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong/kong-gateway:3.2.2.5
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
    - spick
    environment:
        KONG_DATABASE: "off"
        # KONG_PG_HOST: kong-database
        # KONG_PG_USER: kong
        # KONG_PG_PASSWORD: password
    # depends_on:
    # - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    restart: always
    networks:
    - spick
    build:
        context: ./kong/
        dockerfile: Dockerfile
    environment:
        KONG_DATABASE: "off"
        KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yaml
        KONG_PG_HOST: kong-database
        KONG_PG_USER: kong
        KONG_PG_PASSWORD: password
        KONG_PROXY_ACCESS_LOG: /dev/stdout
        KONG_ADMIN_ACCESS_LOG: /dev/stdout
        KONG_PROXY_ERROR_LOG: /dev/stderr
        KONG_ADMIN_ERROR_LOG: /dev/stderr
        KONG_ADMIN_LISTEN: 0.0.0.0:8001
        KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-migration
    volumes:
    - ./kong/kong.yaml:/etc/kong/kong.yaml
    ports: # https://docs.konghq.com/gateway/latest/production/networking/default-ports/
    - "8000:8000" # Takes incoming HTTP traffic from Consumers, and forwards it to upstream Services.
    - "8443:8443" # Takes incoming HTTPS traffic from Consumers, and forwards it to upstream Services.
    - "8001:8001" # Admin API. Listens for calls from the command line over HTTP.
    - "8444:8444" # Admin API. Listens for calls from the command line over HTTPS.
    - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
    - "8445:8445" # Kong Manager (GUI). Listens for HTTPS traffic.
    - "8003:8003" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
    - "8446:8446" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
    - "8004:8004" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.
    - "8447:8447" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.

  #######################################
  # Prometheus
  #######################################
  # prometheus:
  #   image: prom/prometheus:v2.49.1
  #   restart: always
  #   networks:
  #     - spick
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - prometheusdata:/etc/prometheus

  #######################################
  # Grafana Open Source
  #######################################
  # grafana:
  #   image: grafana/grafana-oss:10.2.3
  #   restart: always
  #   networks:
  #     - spick
  #   ports:
  #     - "13000:3000"
  #   volumes:
  #     - grafanadata:/var/lib/grafana    